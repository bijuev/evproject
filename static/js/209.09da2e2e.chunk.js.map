{"version":3,"file":"static/js/209.09da2e2e.chunk.js","mappings":"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","sources":["components/pages/dashboard/mapStyle.ts","components/mapsFn/CurrentLocationFn.tsx","components/pages/dashboard/plug.svg","components/pages/dashboard/Dashboard.tsx"],"sourcesContent":["const mapStyle = [{\r\n    \"featureType\": \"administrative\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [{\"color\": \"#535b69\"}]\r\n}, {\"featureType\": \"landscape\", \"elementType\": \"all\", \"stylers\": [{\"color\": \"#f1f3ff\"}]}, {\r\n    \"featureType\": \"poi\",\r\n    \"elementType\": \"all\",\r\n    \"stylers\": [{\"visibility\": \"off\"}]\r\n}, {\r\n    \"featureType\": \"road\",\r\n    \"elementType\": \"all\",\r\n    \"stylers\": [{\"saturation\": -100}, {\"lightness\": 45}]\r\n}, {\r\n    \"featureType\": \"road.highway\",\r\n    \"elementType\": \"all\",\r\n    \"stylers\": [{\"visibility\": \"simplified\"}]\r\n}, {\r\n    \"featureType\": \"road.arterial\",\r\n    \"elementType\": \"labels.icon\",\r\n    \"stylers\": [{\"visibility\": \"off\"}]\r\n}, {\r\n    \"featureType\": \"transit\",\r\n    \"elementType\": \"all\",\r\n    \"stylers\": [{\"visibility\": \"off\"}]\r\n}, {\"featureType\": \"water\", \"elementType\": \"all\", \"stylers\": [{\"color\": \"#d5e0ff\"}, {\"visibility\": \"on\"}]}]\r\n\r\nexport default mapStyle;\r\n","import React from 'react';\r\n\r\nconst CurrentLocationFn: React.FC<{ onButtonClick: (lat: number, lng: number) => void }> = (props) => {\r\n    const currentLocationHandler = () => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            props.onButtonClick(position.coords.latitude, position.coords.longitude);\r\n        });\r\n    }\r\n    return (\r\n        <button className=\"current-btn\" onClick={currentLocationHandler}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 25 25\">\r\n                <g id=\"current\" transform=\"translate(-69.996 0)\">\r\n                    <path id=\"Union_1\" data-name=\"Union 1\"\r\n                          d=\"M12.153,24.907a.694.694,0,0,1-.347-.6V20.8A8.333,8.333,0,0,1,4.2,13.194H.694a.694.694,0,0,1,0-1.389H4.2A8.333,8.333,0,0,1,11.806,4.2V.694a.694.694,0,0,1,1.389,0V4.2A8.333,8.333,0,0,1,20.8,11.806h3.5a.694.694,0,0,1,0,1.389H20.8A8.333,8.333,0,0,1,13.194,20.8v3.5a.694.694,0,0,1-1.042.6Zm.695-7.175a.694.694,0,0,1,.347.6v1.075a6.944,6.944,0,0,0,6.214-6.214H18.334a.694.694,0,1,1,0-1.389h1.075a6.944,6.944,0,0,0-6.214-6.214V6.667a.694.694,0,1,1-1.389,0V5.592a6.944,6.944,0,0,0-6.214,6.214H6.667a.694.694,0,1,1,0,1.389H5.592a6.944,6.944,0,0,0,6.214,6.214V18.333a.694.694,0,0,1,1.042-.6Zm-3-2.58a3.75,3.75,0,1,1,2.652,1.1A3.751,3.751,0,0,1,9.848,15.151Zm.982-4.321a2.361,2.361,0,0,0,1.67,4.031h0A2.361,2.361,0,1,0,10.83,10.83Z\"\r\n                          transform=\"translate(69.996 0)\" fill=\"currentColor\"/>\r\n                </g>\r\n            </svg>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default CurrentLocationFn;\r\n","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPlug(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 40.8,\n    viewBox: \"0 0 25 34\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5029 0C9.188 0.00344965 6.00995 1.32175 3.66597 3.66562C1.322 6.0095 0.00357922 9.18751 0 12.5024C0 16.621 2.13045 19.4811 4.3834 22.5005L4.47918 22.6329C6.03915 24.7264 7.59913 26.817 9.15915 28.9046L11.9511 32.645C11.9562 32.6546 11.964 32.6625 11.9736 32.6676C12.0061 32.7122 12.0462 32.7507 12.092 32.7816C12.1283 32.8084 12.1664 32.8327 12.206 32.8545C12.2515 32.8727 12.2973 32.8864 12.3428 32.9001H12.3565C12.4027 32.9129 12.4505 32.9191 12.4984 32.9185H12.5029C12.5505 32.9191 12.5981 32.9129 12.644 32.9001C12.6485 32.9045 12.6526 32.9001 12.6574 32.9001C12.706 32.8882 12.7534 32.8715 12.7986 32.8501C12.8384 32.8329 12.8752 32.8099 12.9081 32.7817L12.9129 32.7769C12.9564 32.7466 12.9949 32.7096 13.027 32.6675C13.0367 32.6624 13.0446 32.6545 13.0499 32.6449L15.6451 29.1691C17.2691 26.9887 18.8944 24.81 20.5211 22.633L20.6171 22.5006C22.8701 19.4812 25 16.6211 25 12.5025C24.9967 9.18854 23.6792 6.01116 21.3364 3.66736C18.9936 1.32356 15.8167 0.00461416 12.5029 0Z\",\n    fill: \"#6271e9\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10.7053 6.94226L15.3718 6.25L11.7048 12.6089L17.5 11.3526L9.6024 24.5579L9.42299 24.0454L13.3206 14.2244L7.5 16.6859L10.7053 6.94226Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlug);\nexport default __webpack_public_path__ + \"static/media/plug.52a4018f7fa804ce68649e00e34ca8fb.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState, Fragment, useRef } from \"react\";\r\nimport { GoogleMap, MarkerF, DirectionsRenderer, InfoWindow } from \"@react-google-maps/api\";\r\nimport mapStyle from \"./mapStyle\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { directionActions } from \"../../../store/directionSlice\";\r\nimport useLatlng from \"../../../hooks/use-latlng\";\r\nimport useNavigation from \"../../../hooks/use-navigation\";\r\nimport { RootState } from \"../../../store/index\";\r\nimport CurrentLocationFn from \"../../mapsFn/CurrentLocationFn\";\r\nimport plug from \"./plug.svg\";\r\nimport TravelMode = google.maps.TravelMode;\r\n\r\nconst Dashboard = () => {\r\n    const [lat, setLat] = useState<number>(28.68469194538903);\r\n    const [lng, setLng] = useState<number>(75.67244961643523);\r\n    const [zoom, setZoom] = useState<number>(4)\r\n    const [direction, setDirection] = useState<google.maps.DirectionsResult | null>(null);\r\n    const [markersOnRoute, setMarkersOnRoute] = useState<{ lat: number, lng: number }[] | null>(null);\r\n    const [showCenter, setShowCenter] = useState<boolean>(false);\r\n    const [selectedMarker, setSelectedMarker] = useState<{ address: string, lat: number, lng: number, title: string } | null>();\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const newLocation = useSelector((state: RootState) => state.searchLocation.location)\r\n    const directionOrigin = useSelector((state: RootState) => state.direction.origin, (prevData, newData) => {\r\n        return prevData.length === newData.length;\r\n    })\r\n    const directionDestination = useSelector((state: RootState) => state.direction.destination, (prevData, newData) => {\r\n        return prevData.length === newData.length;\r\n    });\r\n    const positions = useSelector((state: RootState) => state.markers.positions);\r\n    const nearbyCenter = useSelector((state: RootState) => state.nearbyCenter.center);\r\n\r\n    const {launchNavigation} = useNavigation();\r\n\r\n    const {\r\n        lat: searchLat,\r\n        lng: searchLng,\r\n        error: searchError,\r\n        status: searchStatus,\r\n        getGeocode: seachGeocode,\r\n    } = useLatlng();\r\n\r\n    const {\r\n        lat: originLat,\r\n        lng: originLng,\r\n        error: originError,\r\n        status: originStatus,\r\n        getGeocode: originGeocode,\r\n    } = useLatlng();\r\n\r\n    const {\r\n        lat: destinationLat,\r\n        lng: destinationLng,\r\n        error: destinationError,\r\n        status: destinationStatus,\r\n        getGeocode: destinationGeocode,\r\n    } = useLatlng();\r\n\r\n    useEffect(() => {\r\n        if (searchStatus === 'OK') {\r\n            setLat(searchLat);\r\n            setLng(searchLng);\r\n            setZoom(10);\r\n            setShowCenter(true);\r\n        } else {\r\n            console.log(searchError);\r\n        }\r\n    }, [searchLat, searchLng, searchStatus])\r\n\r\n    useEffect(() => {\r\n        seachGeocode(newLocation)\r\n    }, [newLocation])\r\n\r\n    useEffect(() => {\r\n        originGeocode(directionOrigin)\r\n    }, [directionOrigin])\r\n\r\n    useEffect(() => {\r\n        destinationGeocode(directionDestination)\r\n    }, [directionDestination])\r\n\r\n\r\n    useEffect(() => {\r\n        if (originStatus === \"OK\" && destinationStatus === \"OK\") {\r\n            const directionService = new google.maps.DirectionsService();\r\n            const origin = new google.maps.LatLng(originLat, originLng);\r\n            const destination = new google.maps.LatLng(destinationLat, destinationLng);\r\n\r\n            directionService.route(\r\n                {\r\n                    origin: origin,\r\n                    destination: destination,\r\n                    travelMode: TravelMode.DRIVING\r\n                },\r\n                (result, status) => {\r\n                    if (status === \"OK\") {\r\n                        setDirection(result);\r\n                        const polyline = new window.google.maps.Polyline({\r\n                            path: result?.routes[0].overview_path,\r\n                        });\r\n                        const markersOnRoute = positions.filter((item, index) => {\r\n                            return (\r\n                                window.google.maps.geometry.poly.isLocationOnEdge(\r\n                                    new window.google.maps.LatLng(item.lat, item.lng),\r\n                                    polyline,\r\n                                    1e-2\r\n                                )\r\n                            )\r\n                        })\r\n                        setMarkersOnRoute(markersOnRoute)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }, [originLat, originLng, originStatus, destinationLat, destinationLng, destinationStatus]);\r\n\r\n    useEffect(() => {\r\n        if (markersOnRoute && markersOnRoute.length > 0) {\r\n            dispatch(directionActions.stopOverPoints({ stopPoints: markersOnRoute }))\r\n            const directionService = new google.maps.DirectionsService();\r\n            const origin = new google.maps.LatLng(originLat, originLng);\r\n            const destination = new google.maps.LatLng(destinationLat, destinationLng);\r\n            const stopoverPoints = markersOnRoute.map((item, index) => {\r\n                return (\r\n                    {\r\n                        location: new google.maps.LatLng(item.lat, item.lng),\r\n                        stopover: false,\r\n                    }\r\n                )\r\n            })\r\n\r\n            directionService.route(\r\n                {\r\n                    origin: origin,\r\n                    destination: destination,\r\n                    travelMode: TravelMode.DRIVING,\r\n                    waypoints: stopoverPoints\r\n                },\r\n                (result, status) => {\r\n                    if (status === \"OK\") {\r\n                        setDirection(result);\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }, [markersOnRoute])\r\n\r\n\r\n    const options: {} = {\r\n        styles: mapStyle\r\n    }\r\n\r\n    const getCurrentLocation = (lat: number, lng: number) => {\r\n        setLat(lat);\r\n        setLng(lng);\r\n        setZoom(10);\r\n        setShowCenter(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (nearbyCenter.lat && nearbyCenter.lng) {\r\n            setLat(nearbyCenter.lat);\r\n            setLng(nearbyCenter.lng);\r\n            setZoom(13);\r\n            setShowCenter(true);\r\n        }\r\n    }, [nearbyCenter])\r\n\r\n\r\n    const containerStyle = {\r\n        width: '100%',\r\n        height: 'calc(100vh - 64px)'\r\n    }\r\n\r\n    const getPopupNavigation = (desLat: number, desLng: number) => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const origin = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\r\n            const destination = new google.maps.LatLng(desLat, desLng);\r\n            launchNavigation(origin, destination)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"position-relative\">\r\n                <CurrentLocationFn onButtonClick={getCurrentLocation} />\r\n                <GoogleMap\r\n                    mapContainerStyle={containerStyle}\r\n                    center={{ lat: lat, lng: lng }}\r\n                    zoom={zoom}\r\n                    options={options}\r\n                >\r\n                    {\r\n                        positions.map((item, index) => {\r\n                            return <MarkerF key={index}\r\n                                position={item}\r\n                                icon={{ url: plug }}\r\n                                onClick={() => setSelectedMarker(item)}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n                    {\r\n                        showCenter && <MarkerF position={{ lat: lat, lng: lng }} />\r\n                    }\r\n\r\n                    {\r\n                        direction && <DirectionsRenderer directions={direction} />\r\n                    }\r\n                    {\r\n                        !!selectedMarker &&\r\n                        <Fragment>\r\n                            <InfoWindow\r\n                                position={{ lat: selectedMarker?.lat, lng: selectedMarker?.lng }}\r\n                                zIndex={99}\r\n                                onCloseClick={() => setSelectedMarker(null)}\r\n                            >\r\n                                <div className=\"map-popup mxw-6\">\r\n                                    <div className=\"title\">{selectedMarker.title}</div>\r\n                                    <div className=\"address\">{selectedMarker.address}</div>\r\n                                    <button onClick={getPopupNavigation.bind(this, selectedMarker.lat, selectedMarker.lng)}>Get direction</button>\r\n                                </div>\r\n                            </InfoWindow>\r\n                        </Fragment>\r\n\r\n                    }\r\n\r\n                </GoogleMap>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n"],"names":["props","className","onClick","navigator","geolocation","getCurrentPosition","position","onButtonClick","coords","latitude","longitude","xmlns","width","height","viewBox","id","transform","d","fill","TravelMode","google","maps","useState","lat","setLat","lng","setLng","zoom","setZoom","direction","setDirection","markersOnRoute","setMarkersOnRoute","showCenter","setShowCenter","selectedMarker","setSelectedMarker","dispatch","useDispatch","newLocation","useSelector","state","searchLocation","location","directionOrigin","origin","prevData","newData","length","directionDestination","destination","positions","markers","nearbyCenter","center","launchNavigation","useNavigation","useLatlng","searchLat","searchLng","searchError","error","searchStatus","status","seachGeocode","getGeocode","originLat","originLng","originStatus","originGeocode","destinationLat","destinationLng","destinationStatus","destinationGeocode","useEffect","console","log","directionService","DirectionsService","LatLng","route","travelMode","DRIVING","result","polyline","window","Polyline","path","routes","overview_path","filter","item","index","geometry","poly","isLocationOnEdge","directionActions","stopPoints","stopoverPoints","map","stopover","waypoints","options","styles","mapStyle","Fragment","mapContainerStyle","icon","url","plug","directions","zIndex","onCloseClick","title","address","desLat","desLng","bind"],"sourceRoot":""}